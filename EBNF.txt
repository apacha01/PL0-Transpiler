/*
* EBNF -> 
* .pl0 -- PL/0 compiler.
*
* program	= block "." .
* block		= [ "const" ident "=" number { "," ident "=" number } ";" ]
*		  [ "var" ident [ array ] { "," ident [ array ] } ";" ]
*		  { "forward" ident ";" }
*		  { "procedure" ident ";" block ";" } statement .
* statement	= [ ident ":=" expression
*		  | "call" ident
*		  | "begin" statement { ";" statement } "end"
*		  | "if" condition "then" statement [ "else" statement ]
*		  | "while" condition "do" statement
*		  | "readInt" [ "into" ] ident
*		  | "readChar" [ "into" ] ident
*		  | "writeInt" expression
*		  | "writeChar" expression
*		  | "writeStr" ( ident | string )
*		  | "exit" expression ] .
* condition	= "odd" expression
*		  | expression ( comparator ) expression .
* expression	= [ "+" | "-" | "not" ] term { ( "+" | "-" | "or" ) term } .
* term		= factor { ( "*" | "/" | "mod" | "and" ) factor } .
* factor	= ident
*		  | number
*		  | "(" expression ")" .
* comparator	= "=" | "#" | "<" | ">" | "<=" | ">=" | "<>" .
* array		= "size" number .
*
*/